# Generated by Django 2.2.1 on 2019-06-13 08:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('nid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128, verbose_name='文章标题')),
                ('summary', models.CharField(max_length=255, verbose_name='文章概要')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('read_count', models.IntegerField(default=0, verbose_name='阅读次数')),
                ('comment_count', models.IntegerField(default=0, verbose_name='评论次数')),
                ('up_count', models.IntegerField(default=0, verbose_name='赞次数')),
                ('down_count', models.IntegerField(default=0, verbose_name='踩次数')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除')),
            ],
            options={
                'db_table': 'article',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('nid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('site', models.CharField(max_length=32, unique=True, verbose_name='个人博客主页名')),
                ('title', models.CharField(max_length=64, verbose_name='个人博客标题')),
                ('theme', models.CharField(default='warm.css', max_length=32, verbose_name='个人博客主题')),
                ('memo', models.CharField(default=None, max_length=255, null=True, verbose_name='座右铭')),
            ],
            options={
                'db_table': 'blog',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('nid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(default=None, max_length=48, unique=True, verbose_name='用户登录名')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='邮箱')),
                ('pwd', models.CharField(max_length=128, verbose_name='密码')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('nickname', models.CharField(max_length=48, null=True, verbose_name='昵称')),
                ('avatar', models.ImageField(null=True, upload_to='static/avatar/', verbose_name='头像')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='WebPlate',
            fields=[
                ('nid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=48)),
            ],
            options={
                'db_table': 'webplate',
            },
        ),
        migrations.CreateModel(
            name='UserFans',
            fields=[
                ('nid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('follower', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='followers', to='web.User', verbose_name='粉丝')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='web.User', verbose_name='博主')),
            ],
            options={
                'db_table': 'userfans',
                'unique_together': {('user', 'follower')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='fans',
            field=models.ManyToManyField(related_name='interests', through='web.UserFans', to='web.User', verbose_name='粉丝们'),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('nid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=32, verbose_name='文章标签')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除')),
                ('blog', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.Blog', verbose_name='所属博客')),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('nid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=32, verbose_name='文章分类')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除')),
                ('blog', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.Blog', verbose_name='所属博客')),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.AddField(
            model_name='blog',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.User'),
        ),
        migrations.CreateModel(
            name='ArticleM2MTag',
            fields=[
                ('nid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('article', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.Article', verbose_name='文章')),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.Tag', verbose_name='标签')),
            ],
            options={
                'db_table': 'articlem2mtag',
                'unique_together': {('article', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='ArticleDetail',
            fields=[
                ('nid', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('content', models.TextField(verbose_name='文章内容')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('article', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.Article', verbose_name='所属文章')),
            ],
            options={
                'db_table': 'articlecontent',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='blog',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.Blog', verbose_name='所属博客'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.Category', verbose_name='分类'),
        ),
        migrations.AddField(
            model_name='article',
            name='tag',
            field=models.ManyToManyField(through='web.ArticleM2MTag', to='web.Tag'),
        ),
        migrations.AddField(
            model_name='article',
            name='webplate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.WebPlate', verbose_name='所属网站分类'),
        ),
    ]
